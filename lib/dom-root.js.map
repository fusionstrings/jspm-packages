{"version":3,"sources":["../src/dom-root.jsx"],"names":[],"mappings":"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","file":"dom-root.js","sourcesContent":["/** @jsx h */\nimport nano, { Component, h } from \"nano-jsx\";\nimport { Package } from \"./package.js\";\n\nclass DomRoot extends Component {\n  constructor(props) {\n    super(props);\n    // const selectedExports = {};\n    // if (props.selectedExports) {\n    //   Object.entries(props.selectedExports).forEach(([subpath, selected]) => {\n    //     if (selected === true) {\n    //       selectedExports[subpath] = selected;\n    //     }\n    //   });\n    // }\n    this.selectedExports = localStorage.getItem('selectedExports') ? JSON.parse(localStorage.getItem('selectedExports')) : this.selectedExports;\n    this.selectedDeps = localStorage.getItem('selectedDeps') ? JSON.parse(localStorage.getItem('selectedDeps')) : this.selectedDeps;\n    this.generatorHash = localStorage.getItem('generatorHash') || this.generatorHash;\n  }\n\n  selectedExports = {};\n  selectedDeps = [];\n  generatorHash = '';\n  openImportmapDialog= false;\n\n  generateHash = async () => {\n    if (typeof globalThis.document !== \"undefined\") {\n\n      const { getStateHash } = await import(\"./generate-statehash.js\");\n      const selectedDeps = this.selectedDeps.map((\n        subpath,\n      ) => [subpath, !!subpath]);\n\n      const generatorHash = await getStateHash({ selectedDeps });\n\n      if (generatorHash) {\n        this.generatorHash = generatorHash;\n        this.update();\n      }\n    }\n  };\n\n  toggleExportSelection = (event) => {\n    event.preventDefault();\n    console.log(event);\n    this.selectedExports[event.target.value] = !this\n      .selectedExports[event.target.value];\n    console.log(event.target.value);\n    this.selectedDeps = Object.keys(this.selectedExports).filter((subpath) =>\n      this.selectedExports[subpath] === true\n    );\n    this.generateHash();\n    console.log(JSON.stringify(this.selectedExports));\n    this.update();\n  };\n\n  toggleImportmapDialog = (event) => {\n    event.preventDefault();\n    this.openImportmapDialog = !this.openImportmapDialog;\n    this.update();\n  };\n\n  didMount() {\n    if (!this.generatorHash) {\n      this.generateHash();\n    }\n  }\n  didUpdate() {\n    localStorage.setItem('selectedExports', JSON.stringify(this.selectedExports));\n    localStorage.setItem('selectedDeps', JSON.stringify(this.selectedDeps));\n    localStorage.setItem('generatorHash', this.generatorHash);\n  }\n  render() {\n    const {\n      created,\n      downloads,\n      exports,\n      features,\n      license,\n      links,\n      maintainers,\n      name,\n      readme,\n      updated,\n      version,\n    } = this.props;\n\n    return (\n      <Package\n        created={created}\n        downloads={downloads}\n        exports={exports}\n        features={features}\n        license={license}\n        links={links}\n        name={name}\n        readme={readme}\n        toggleExportSelection={this.toggleExportSelection}\n        maintainers={maintainers}\n        updated={updated}\n        version={version}\n        generatorHash={this.generatorHash}\n        selectedDeps={this.selectedDeps}\n        openImportmapDialog={this.openImportmapDialog}\n        toggleImportmapDialog={this.toggleImportmapDialog}\n      />\n    );\n  }\n}\n\nexport { DomRoot };\n"]}