default-task = 'build'
version = 0.1

extensions = ['chomp@0.1:swc', 'chomp@0.1:jspm', 'chomp@0.1:npm']

[template-options.npm]
auto-install = true

[[task]]
deps = ['lib/**/*.html', 'deno.importmap', 'lib/static-resources.json']
name = 'build'

[[task]]
deps = ['browser', 'lib/**/*.html', 'deno.importmap', 'server.tsx', 'lib/static-resources.json']
name = 'serve'
run = 'deno run -A --import-map=deno.importmap --unstable --no-check server.tsx'

[[task]]
name = 'browser'
deps = ['jsx', 'ts']

[[task]]
name = 'ts'
dep = 'src/#.ts'
target = 'lib/#.js'
template = 'swc'

[[task]]
name = 'jsx'
dep = 'src/#.tsx'
target = 'lib/#.js'
template = 'swc'
[task.template-options.config]
'jsc.parser.tsx' = true
'jsc.transform.react.pragma' = 'h'

[[task]]
name = 'clean'
run = 'rm deno.importmap ; rm lib/* ;'
validation = 'none'

[[task]]
dep = 'src/#.js'
run = 'cp $DEP $TARGET'
target = 'lib/#.js'

[[task]]
deps = ['server.tsx', 'lib/static-resources.json']
target = 'deno.importmap'
template = 'jspm'
[task.template-options]
env = ['deno', 'production']

[[task]]
deps = ['src/#.html', 'browser', 'npm:install']
engine = 'node'
invalidation = 'always'
run = '''
    import { Generator } from '@jspm/generator';
    import { readFile, writeFile } from 'fs/promises';
    import { pathToFileURL } from 'url';
    import mkdirp from 'mkdirp';
    import { dirname } from 'path';

    const generator = new Generator({
      mapUrl: pathToFileURL(process.env.TARGET),
      env: ["browser", "production"],
    });

    const htmlSource = await readFile(process.env.DEP, 'utf-8');

    mkdirp.sync(dirname(process.env.TARGET));
    await writeFile(process.env.TARGET, await generator.htmlGenerate(htmlSource, {
      // custom task required to set this up for now!
      htmlUrl: pathToFileURL('process.env.TARGET'),
      preload: true,
      integrity: false, // erring ATM
      whitespace: true,
      esModuleShims: true,
      comment: true
    }));
'''
target = 'lib/#.html'

[[task]]
deps = ['lib/**/*.html', 'browser', 'npm:install']
engine = 'node'
invalidation = 'always'
run = '''
   import './generate-static-resources-map.js';
'''
target = 'lib/static-resources.json'

[[task]]
deps = ['package.json', 'npm:install']
engine = 'node'
invalidation = 'always'
name = 'exportmap'
run = '''
   import './generate-exportmap.js';
'''
