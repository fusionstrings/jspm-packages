version = 0.1
default-task = "deno-deploy"

[[task]]
  name = "deno-deploy"
  deps = [":build-lib", "server.js"]
  run = "deno run -A --unstable server.js"

[[task]]
  name = "deno"
  deps = [":build-lib", "deno.importmap", "server.jsx"]
  run = "deno run -A --import-map=deno.importmap --unstable --no-check server.jsx"

[[task]]
  name = "build-lib"
  deps = [":copy-js", ":jsx", "lib/shell.html"]

[[task]]
  name = "jsx"
  target = "lib/#.js"
  dep = "src/#.jsx"
  template = "swc"
  [task.template-options.config]
    "jsc.parser.jsx" = true
    "jsc.transform.react.pragma" = "h"

[[task]]
  name = "jsx-deno"
  target = "lib/server.js"
  dep = "server.jsx"
  template = "swc"
  [task.template-options.config]
    "jsc.parser.jsx" = true
    "jsc.transform.react.pragma" = "h"

[[task]]
  name = "clean"
  run = "rm -rf deno.importmap lib server.js"

[[task]]
  name = "copy-js"
  target = "lib/#.js"
  dep = "src/#.js"
  run = "cp $DEP $TARGET"

[[task]]
  name = "generate-deno-bundle"
  target = "server.js"
  deps = [":build-lib", "deno.importmap", "server.jsx"]
  run = """
  deno bundle --import-map=deno.importmap --unstable --no-check server.jsx server.js
  """

[[task]]
  target = "deno.importmap"
  deps = ["server.jsx"]
  template = "jspm"
  [task.template-options]
    env = ["deno", "production"]

[[task]]
  template = "jspm"
  target = "lib/shell.html"
  deps = ["src/shell.html", ":jsx", ":copy-js"]
  [task.template-options]
    env = ["browser", "production"]
