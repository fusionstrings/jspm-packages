version = 0.1
default-task = 'build'

extensions = ['chomp@0.1:swc', 'chomp@0.1:jspm', 'chomp@0.1:npm']

[template-options.npm]
auto-install = true

[[task]]
name = 'build'
deps = ['deno.importmap', 'shell.html']

[[task]]
name = 'serve'
deps = ['lib/**/*.js', 'deno.importmap', 'server.jsx', 'shell.html']
run = 'deno run -A --import-map=deno.importmap --unstable --no-check server.jsx'

[[task]]
target = 'lib/#.js'
dep = 'src/#.jsx'
template = 'swc'
[task.template-options.config]
'jsc.transform.react.pragma' = 'h'
'jsc.parser.tsx' = true

[[task]]
name = 'clean'
validation = 'none'
run = 'rm deno.importmap ; rm lib/* ; rm shell.html'

[[task]]
target = 'lib/#.js'
dep = 'src/#.js'
run = 'cp $DEP $TARGET'

[[task]]
target = 'deno.importmap'
deps = ['server.jsx']
template = 'jspm'
[task.template-options]
env = ['deno', 'production']

[[task]]
target = 'shell.html'
deps = ['src/shell.html', 'lib/**/*.js', 'npm:install']
invalidation = 'always'
engine = 'node'
run = '''
    import { Generator } from '@jspm/generator';
    import { readFile, writeFile } from 'fs/promises';
    import { pathToFileURL } from 'url';
    import mkdirp from 'mkdirp';
    import { dirname } from 'path';

    const generator = new Generator({
      mapUrl: pathToFileURL(process.env.TARGET),
      env: ["browser", "production"],
    });

    const htmlSource = await readFile(process.env.DEP, 'utf-8');

    mkdirp.sync(dirname(process.env.TARGET));
    await writeFile(process.env.TARGET, await generator.htmlGenerate(htmlSource, {
      // custom task required to set this up for now!
      htmlUrl: pathToFileURL('lib/shell.html')
    }));
'''
