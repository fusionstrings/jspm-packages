version = 0.1

default-task = "deno"

[[task]]
  name = "deno-deploy"
  deps = ["build"]
  run = "deno run -A --unstable --watch server.js"

[[task]]
  name = "deno"
  deps = ["build"]
  run = "deno run -A --import-map=deno.importmap --unstable --watch server.jsx"

[[task]]
  name = "build"
  deps = ["copy-js", "jsx", "jspm", "generate-deno-bundle"]

[[task]]
  name = "jsx"
  target = "lib/#.js"
  deps = ["src/#.jsx"]
  template = "swc"
  [task.template-options.config]
    "jsc.parser.jsx" = true
    "jsc.transform.react.pragma" = "h"

[[task]]
  name = "jsx-deno"
  target = "lib/server.js"
  deps = ["server.jsx"]
  template = "swc"
  [task.template-options.config]
    "jsc.parser.jsx" = true
    "jsc.transform.react.pragma" = "h"

[[task]]
  name = "clean"
  run = "rm -rf deno.importmap lib server.js"

[[task]]
  name = "copy-js"
  target = "lib/#.js"
  deps = ["src/#.js"]
  run = "cp $DEP $TARGET"

[[task]]
  name = "generate-deno-bundle"
  deps = ["generate-deno-importmap"]
  run = """
  deno bundle --import-map=deno.importmap --unstable --no-check server.jsx server.js
  """

[[task]]
  name = "generate-deno-importmap"
  template = "jspm"
  target = "deno.importmap"
  deps = ["server.jsx"]
  [task.template-options]
    env = ["deno", "production"]

[[task]]
  name = "jspm"
  template = "jspm"
  target = "lib/shell.html"
  deps = ["src/shell.html"]
  [task.template-options]
    env = ["browser", "production"]
